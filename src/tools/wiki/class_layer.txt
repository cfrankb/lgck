===== Class Layer =====
==== Description ====
Layer are broken into distinct group: background and foreground. The former are displayed behing the main layer, while the later are on top. The Layer allows for direct manipulation of all layers other than main. 

Objects on the main layer are sprites and are accessible through the Sprite interface.
==== Members ====
  * **int** id\\
  * **string** name\\
  * **int** type\\


==== Layer:addElement====
  * __in__ **int ImageSet**\\
  * __in__ **int imageNo**\\
  * __in__ **int x**\\
  * __in__ **int y**\\
  * __in__ **bool show***\\
  * __out__ **Element **\\
=== Description ===

Create a new Element on this layer. This function returns an Element object.

If show is omited, it is assumed to be false. This causes the element to be invisible by default.

<code lua>
local layer = getLayer( "fw");

local element = layer:addElement(IMAGES_WHITEBALL_PNG, 0, 100, 100, true);

for i=1, 10 do
 local e = layer:addElement( IMAGES_WHITEBALL_PNG, 0, rand() % BUFFERLEN, (rand() % BUFFERHEI) - BUFFERHEI, true ) ;

end
</code>




==== Layer:clear====
  * __in__ ** void **\\
  * __out__ ** void **\\
=== Description ===

Clear the layer.

<code lua>
local layer = getLayer( "fw");
layer:clear();
</code>




==== Layer:delete (lua/?)====
  * __in__ ** void **\\
  * __out__ ** void **\\
=== Description ===

Remove this layer. (this may invalidate the other layer id)




==== Layer:getElement====
  * __in__ **int index**\\
  * __out__ **Element **\\
=== Description ===

returns an Element from this layer.




==== Layer:getSize====
  * __in__ ** void **\\
  * __out__ **int size**\\
=== Description ===

return the element count for the given layer.

<code lua>
local layer = getLayer( "fw");
Debug:printf("layer size: %d", layer:getSize());
</code>




==== Layer:setSpeed (?)====
  * __in__ **int hSpeed**\\
  * __in__ **int vSpeed**\\
  * __out__ ** void **\\
=== Description ===

Set the scroll speed of this layer.

Valid values include

<code lua>
        SPEED_NOSCROLL,
        SPEED_WHOLE,
        SPEED_1_2,
        SPEED_1_4,
        SPEED_1_8,
        SPEED_1_16,
        SPEED_1_32
</code>



