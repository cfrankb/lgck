/*
    LGCK Builder Runtime
    Copyright (C) 1999, 2020  Francois Blanchette

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include "WizScript.h"

WIZACTION CWizScript::m_actions[] =
    {
        {"Add Sprite", "add_sprite", "Add a new sprite.", "N", "local newSprite = Sprite:new(0, 0, UP, SPRITE_ANNIE);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = CWizScript:use(wizID);\n    wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Add New Sprite\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label0 = QLabel:new(\"x\");\n    local label1 = QLabel:new(\"y\");\n    local label2 = QLabel:new(\"aim\");\n    local label3 = QLabel:new(\"sprite\");\n    self.edit0 = QLineEdit:new();\n    self.edit0:setText('0')\n    self.edit1 = QLineEdit:new();\n    self.edit1:setText('0')\n    self.combo2 = QComboBox:new();\n    local aims = {'UP', 'DOWN', 'LEFT', 'RIGHT'}\n    local i;\n    for i=1, #aims do\n        self.combo2:addItem(aims[i]);\n    end\n    self.combo3 = QComboBox:new();\n    wiz:initComboBox(self.combo3, \"sprite\");\n    local grid = QGridLayout:new();\n    grid:addWidget(label0, 0,0);\n    grid:addWidget(label1, 1,0);\n    grid:addWidget(label2, 2,0);\n    grid:addWidget(label3, 3,0);\n    grid:addWidget(self.edit0, 0,1);\n    grid:addWidget(self.edit1, 1,1);\n    grid:addWidget(self.combo2, 2,1);\n    grid:addWidget(self.combo3, 3,1);\n\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local x = tonumber(self.edit0:text());\n    local y = tonumber(self.edit1:text());\n    local aim = self.combo2:currentText();\n    local chSprite = self.combo3:currentText();\n    return string.format('-- add sprite\\nlocal newSprite = Sprite:new(%d, %d, %s, %s);\\n',\n        x, y, aim, chSprite);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Add To Score", "addToScore", "Add points to the player.", "N", "addToScore(100);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = CWizScript:use(wizID);\n    --wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Add To Score\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label1 = QLabel:new(\"Points\");\n    self.combo1 = QComboBox:new();\n    local points = {\n        0,\n        10,\n        25,\n        50,\n        100,\n        200,\n        300,\n        400,\n        500,\n        1000,\n        2000,\n        5000,\n        10000\n    };\n    local i;\n    for i=1, #points do\n        local pts = string.format(\"%d\", points[i])\n        self.combo1:addItem(pts)\n    end\n    --wiz:initComboBox(self.combo1, \"sprite\");\n    local grid = QGridLayout:new();\n    grid:addWidget(label1, 0,0);\n    grid:addWidget(self.combo1, 0,1)\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local pts = self.combo1:currentText();\n    return string.format(\"addToScore(%s);\\n\", pts);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Breakable brick/bridge", "breakable", "Create a breakable brick/bridge. This should be added to the `OnHandler` event.", "S", "local sprite = getSprite( self );\nlocal image = sprite.imageNo;\nif sprite:isPlayerThere( UP ) then\n	sprite:set(\"touched\", 1);\nend\nif (sprite:get(\"touched\") ~= 0 or image > 3) and ticks % 3 == 0 then\n	image = image + 1\n	sprite:unMap();\n	if image < sprite:frameCount() then\n		sprite:setImage( sprite.imageSet, image);\n	else\n		sprite:hide();\n	end\n	sprite:map();\n	sprite:set(\"touched\", 0);\nend", "", ""},
        {"Call Game Event", "callGameEvent", "Trigger a game event.", "N", "callGameEvent(EG_GOAL_KILLED);", "", ""},
        {"Change Sprite to another sprite", "changeTo", "Change the current sprite into a diffent one. While any combination is valid, some restrictions may affect the workability of the game flow.", "S", "local sprite = getSprite(self);\nsprite:changeTo(OBJECT_DEAD_ANNIE);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = CWizScript:use(wizID);\n    --wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Select New Sprite\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label1 = QLabel:new(\"Sprite\");\n    self.combo1 = QComboBox:new();\n    wiz:initComboBox(self.combo1, \"sprite\");\n    local grid = QGridLayout:new();\n    grid:addWidget(label1, 0,0);\n    grid:addWidget(self.combo1, 0,1)\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local chSprite = self.combo1:currentText();\n    return string.format(\"local sprite = getSprite(self);\\nsprite:changeTo(%s);\\n\", chSprite);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Clear Screen", "ss_clear", "Clear the whole screen and paint the background with the provided color.", "D", "-- clear screen (red,green,blue)\nss_clear(0,0,0);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = QWizard:use(wizID);\n    wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Select Clear Color\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label1 = QLabel:new(\"Color\");\n    self.btn = CWBtnColor:new();\n    self.btn:setColor(0, 0, 0);\n    local grid = QGridLayout:new();\n    grid:addWidget(label1, 0,0);\n    grid:addWidget(self.btn, 0,1)\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local rgb = self.btn:color();\n    local red, green, blue = rgb2tuple(rgb);\n    return string.format(\"ss_clear(%d, %d, %d);\\n\", red, green, blue);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Draw Image", "drawImage", "Draw an image on the screen.", "D", "", "", ""},
        {"Draw Rectangle", "drawRect", "Draw a rectangle on the screen.", "D", "ss_paint(0,0,40,40, 0xaa00aa90, TRUE);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = QWizard:use(wizID);\n    wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Draw Rectangle\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label0 = QLabel:new(\"x1\");\n    local label1 = QLabel:new(\"y1\");\n    local label2 = QLabel:new(\"x2\");\n    local label3 = QLabel:new(\"y2\");\n    self.edit0 = QLineEdit:new();\n    self.edit0:setText('0')\n    self.edit1 = QLineEdit:new();\n    self.edit1:setText('0')\n    self.edit2 = QLineEdit:new();\n    self.edit2:setText('100')\n    self.edit3 = QLineEdit:new();\n    self.edit3:setText('100')\n\n    local label4 = QLabel:new(\"Rectangle Color\");\n    self.btn = CWBtnColor:new();\n    self.btn:setColor(128, 240, 255);\n\n    self.ckFill = QCheckBox:new(\"Filled\");\n    self.ckFill:setChecked(true);\n\n    local grid = QGridLayout:new();\n    grid:addWidget(label0, 0,0);\n    grid:addWidget(label1, 1,0);\n    grid:addWidget(label2, 2,0);\n    grid:addWidget(label3, 3,0);\n    grid:addWidget(self.edit0, 0,1);\n    grid:addWidget(self.edit1, 1,1);\n    grid:addWidget(self.edit2, 2,1);\n    grid:addWidget(self.edit3, 3,1);\n    grid:addWidget(label4, 4,0);\n    grid:addWidget(self.btn, 4,1)\n    grid:addWidget(self.ckFill, 5,1)\n\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local x1 = tonumber(self.edit0:text());\n    local y1 = tonumber(self.edit1:text());\n    local x2 = tonumber(self.edit2:text());\n    local y2 = tonumber(self.edit3:text());\n    local rgba = self.btn:color() + 0xff000000;\n    local fill = 'false';\n    if self.ckFill:isChecked() then\n        fill = 'true';\n    end\n    return string.format(\"--draw rectangle\\nss_paint(%d, %d, %d, %d, 0x%x, %s);\\n\", x1, y1, x2,y2, rgba, fill);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Draw Text", "drawText", "Draw text on the screen.", "D", "ss_drawText(100, 50, \"Grab the flower\", 0, 20, 0xa0ee20cc, 2, 0xffffffff);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = QWizard:use(wizID);\n    wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Draw Text\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label0 = QLabel:new(\"x\");\n    local label1 = QLabel:new(\"y\");\n    local label2 = QLabel:new(\"text\");\n    local label3 = QLabel:new(\"size\");\n    local label4 = QLabel:new(\"color\");\n    local label5 = QLabel:new(\"shadow offset\");\n    local label6 = QLabel:new(\"shadow color\");\n    self.edit0 = QLineEdit:new();\n    self.edit0:setText('0')\n    self.edit1 = QLineEdit:new();\n    self.edit1:setText('0')\n    self.edit2 = QLineEdit:new();\n    self.edit2:setText('Hello World !!!');\n    self.edit2:setPlaceholderText(\"put your text here\");\n    self.edit3 = QLineEdit:new();\n    self.edit3:setText('10')\n    self.edit5 = QLineEdit:new();\n    self.edit5:setText('2')\n    self.btnColor = CWBtnColor:new();\n    self.btnColor:setColor(128, 240, 255);\n    self.btnShadow = CWBtnColor:new();\n    self.btnShadow:setColor(28, 20, 20);\n\n    local grid = QGridLayout:new();\n    grid:addWidget(label0, 0,0);\n    grid:addWidget(label1, 1,0);\n    grid:addWidget(label2, 2,0);\n    grid:addWidget(label3, 3,0);\n    grid:addWidget(label4, 4,0);\n    grid:addWidget(label5, 5,0);\n    grid:addWidget(label6, 6,0);\n    grid:addWidget(self.edit0, 0,1);\n    grid:addWidget(self.edit1, 1,1);\n    grid:addWidget(self.edit2, 2,1);\n    grid:addWidget(self.edit3, 3,1);\n    grid:addWidget(self.edit5, 5,1);\n    grid:addWidget(self.btnColor, 4,1)\n    grid:addWidget(self.btnShadow, 6,1)\n\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local x1 = tonumber(self.edit0:text());\n    local y1 = tonumber(self.edit1:text());\n    -- TODO: add alpha\n    local ttext = self.edit2:text();\n    local tsize = tonumber(self.edit3:text());\n    local y2 = tonumber(self.edit3:text());\n    local shOffset = tonumber(self.edit5:text());\n    local rgbaColor = self.btnColor:color() + 0xff000000;\n    local rgbaShadow = self.btnShadow:color() + 0xff000000;\n    return string.format('-- draw text\\nss_drawText(%d, %d, %q, %d, %d, 0x%x, %d, 0x%x);\\n',\n        x1, y1, ttext, 0, tsize, rgbaColor, shOffset, rgbaShadow);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Fire Bullet", "sprite_fireBullet", "Fire a bullet from the current aim of this sprite.", "S", "local sprite = getSprite( self );\nlocal proto = sprite:getProto();\nif ((proto.fireRate == 0 ) or (ticks % proto.fireRate == 0))\n    and (not sprite:isPlayer() or testJoyState( JOY_FIRE )) then\n \n    local x , y, aim = getSpriteVars( self );\n    if testJoyState( JOY_LEFT ) then \n        aim = LEFT;\n    elseif testJoyState( JOY_RIGHT ) then\n        aim = RIGHT;\n    elseif testJoyState( JOY_UP ) then\n        aim = UP;\n    elseif testJoyState( JOY_DOWN ) then\n        aim = DOWN;\n    end \n\n    if aim == LEFT then \n        y = y + AND(sprite:height()/2, 0xfff8);\n    elseif aim == RIGHT then\n        x = x + sprite:width();\n        y = y + AND(sprite:height()/2, 0xfff8);\n    elseif aim == UP then\n        x = x + AND(sprite:width()/2, 0xfff8);\n    elseif aim == DOWN then\n        x = x + AND(sprite:width()/2, 0xfff8);\n        y = y + sprite:height(); \n    end \n\n    local activeBullets = sprite:childCount();\n    if aim ~= HERE and proto.buddy ~= 0 and activeBullets < proto.maxBullets then\n        local bullet = addSprite(\n            x, \n            y, \n            aim,\n            proto.buddy\n        );\n\n        if aim == LEFT then\n            bullet:moveBy(- bullet:width(), 0)\n        elseif aim == UP then\n            bullet:moveBy(0, - bullet:height())\n        end if\n        bullet:map();\n        bullet:setOwner( sprite );\n\n        if proto.bulletSound > 0 then\n            playSound(proto.bulletSound);\n        end        \n    end\nend", "", ""},
        {"Get Counter", "counters_get", "", "N", "local score = counters_get(\"score\");", "", ""},
        {"Get Frame Count from this Sprite", "sprite_frameCount", "Count the number of frames for this Sprite.", "S", "local sprite = getSprite(self);\nlocal count = sprite:frameCount();", "", ""},
        {"Get Frame Count in a FrameSet", "frameSet_getSize", "Get the number of frame in FrameSet.", "N", "local frames = frameSet_getSize(IMAGES_PLAYER);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = CWizScript:use(wizID);\n    --wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Select ImageSet\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label1 = QLabel:new(\"ImageSet\");\n    self.combo1 = QComboBox:new();\n    wiz:initComboBox(self.combo1, \"image\");\n    local grid = QGridLayout:new();\n    grid:addWidget(label1, 0,0);\n    grid:addWidget(self.combo1, 0,1)\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local imageSet = self.combo1:currentText();\n    return string.format(\"local frames = frameSet_getSize(%s);\\n\", imageSet);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Get Screen Size", "getScreenSize", "Get the window width and height.", "N", "local w,d = getScreenSize();", "", ""},
        {"Get Sprite Property", "spriteGet", "", "S", "local sprite = getSprite(self);\nlocal touched = sprite:get(\"touched\");", "", ""},
        {"Get text Width", "sizeText", "", "N", "", "", ""},
        {"Get variable", "getVar", "", "N", "local foo = var_get(\"foo\");", "", ""},
        {"Hide This Sprite", "sprite_hide", "Hide sorite. Mark this sprite as invisible.", "S", "local sprite = getSprite(self);\nsprite:hide();", "", ""},
        {"Kill Player", "sprite_killPlayer", "Kill the player.", "S", "killPlayer();", "", ""},
        {"Kill this sprite", "killSprite", "", "S", "local sprite = getSprite(self);\nsprite:kill();", "", ""},
        {"Play Music", "playMusic", "Play a streaming music file. The path is relative to your lgckdb file.", "N", "openStream(\"music.ogg\");\nplayStream();", "", ""},
        {"Play Sound", "playSound", "Play a sound file. Replace This sound has to be stored inside the database. Lookup under \"sounds\" tab.", "S", "playSound(\"WALK\");", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = CWizScript:use(wizID);\n    --wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Select Sound\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label1 = QLabel:new(\"Sound\");\n    self.combo1 = QComboBox:new();\n    wiz:initComboBox(self.combo1, \"sound\");\n    local grid = QGridLayout:new();\n    grid:addWidget(label1, 0,0);\n    grid:addWidget(self.combo1, 0,1)\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local sound = self.combo1:currentText();\n    return string.format(\"playSound(%q);\\n\", sound);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Set Background Color", "setBkColor", "Set the level background color.", "N", "-- red, green, blue (0, 255)\nsetBkColor(128, 240, 255);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = QWizard:use(wizID);\n    wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Select Background Color\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label1 = QLabel:new(\"Background Color\");\n    self.btn = CWBtnColor:new();\n    self.btn:setColor(128, 240, 255);\n    local grid = QGridLayout:new();\n    grid:addWidget(label1, 0,0);\n    grid:addWidget(self.btn, 0,1)\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local rgb = self.btn:color();\n    local red, green, blue = rgb2tuple(rgb);\n    return string.format(\"setBkColor(%d, %d, %d);\\n\", red, green, blue);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Set Border Color", "setBorderColor", "Set the level border color.", "N", "-- red, green, blue (0, 255)\nsetBorderColor(128, 240, 255);", "", "Script = {};\nScript.__index = Script; \n\nfunction Script:load()\n    -- get Wizard\n    local wizID = findWidget(\"wizard\");\n    local wiz = QWizard:use(wizID);\n    wiz:setWindowTitle(\"Script Wizard\");\n\n    -- create new page\n    local wizPage = QWizardPage:new();\n    wizPage:setSubTitle(\"Select Border Color\");\n    -- wizPage:setTitle(\"hello world\")\n\n    -- create controls\n    local label1 = QLabel:new(\"Border Color\");\n    self.btn = CWBtnColor:new();\n    self.btn:setColor(128, 240, 255);\n    local grid = QGridLayout:new();\n    grid:addWidget(label1, 0,0);\n    grid:addWidget(self.btn, 0,1)\n    wizPage:setLayout(grid);\n    self.pageId = wiz:addPage(wizPage);\n    self.wiz = wiz;\n    self.wizPage = wizPage;\nend\n\nfunction Script:unload()\n    self.wiz:removePage(self.pageId);\n    return 0;\nend\n\nfunction Script:save()\n    local rgb = self.btn:color();\n    local red, green, blue = rgb2tuple(rgb);\n    return string.format(\"setBorderColor(%d, %d, %d);\\n\", red, green, blue);\nend\n\n-- run the onLoad automatically\nscript = {};\nsetmetatable(script, Script);\nscript:load();"},
        {"Set Counter", "counters_set", "", "N", "counters_set(\"score\", 1000);", "", ""},
        {"Set Sprite Property", "spriteSet", "", "S", "local sprite = getSprite(self);\nsprite:set(\"touched\", true);", "", ""},
        {"Set variable", "setVar", "", "N", "-- only accepts integers \nset_var(\"foo\", 2014);", "", ""},
        {"Show This Sprite", "sprite_show", "Show the sprite. Make it visible.", "S", "local sprite = getSprite(self);\nsprite:show();", "", ""},
        {"Sprite Fall (for varying heights)", "sprite_fall", "This is a template for handling fall from various heights. This should added to the `OnFall` event.", "S", "-- this script will decide which fall sound to play.,\n-- add this to the onFall event\nlocal s = getSprite( self );\nlocal tmp = copySprite ( s );\nlocal fall = 0;\nwhile tmp:canFall() do\n  tmp:move( DOWN );\n  fall = fall + 1;\nend\ntmp:clear();\nif fall < 20 then\n  -- add action here\n  -- playSound(\"short fall.ogg\");\nelse\n  -- add action here\n  -- playSound(\"fall.ogg\");\nend", "", ""},
        {"Sprite Fall Into The Abyss", "sprite_fallAbyss", "This is a template for handling falling off the screen. This should be added to the `OnLanding` event", "S", "-- add this to event OnLanding\nlocal s = getSprite(self);\nlocal sx, sy = getImageSize(s.imageSet, s.imageNo);\nif s.y + sy >= var_get(\"BUFFERHEI\") then\n  s:setState(STATE_DEAD);\n  s:hide();\nelse\n  -- add code here\n  -- playSound(\"POUFLIGHT\");\n  local extra = getExtra(self);\n  if extra.fallHeight >= 20 then\n    -- uncomment these lines if needed\n    -- triggerPlayerHitState();\n    -- addToHP( -25 );\n  end\nend", "", ""},
        {"Stop Music", "stopMusic", "", "N", "stopStream();", "", ""},
        {"Unmark as goal", "sprite_unMarkAsGoal", "A sprite can be marked as goal toward completing the level. You can flip off this flag.", "S", "local sprite = getSprite(self);\nsprite:unmarkAsGoal();", "", ""},
        {nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr}};
